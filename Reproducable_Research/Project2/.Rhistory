getwd()
unzip("repdata-data-StormData.csv.bz2")
install.packages("R.utils")
library(R.utils)
# Unzip the raw data archive
bunzip2("repdata-data-StormData.csv.bz2")
StormData <- read.csv("repdata-data-StormData.csv")
str(StormData)
head(StormData)
unique(StormData$EVTYPE)
library(plyr)
str(StormData)
TotalFatalitySummary <- ddply(StormData, .(EVDATA), Summary, total = sum(FATALITIES))
TotalFatalitySummary <- ddply(StormData, .(EVTYPE), Summary, total = sum(FATALITIES))
TotalFatalitySummary <- ddply(StormData, .(EVTYPE), summarize, total = sum(FATALITIES))
head(TotalFatalitySummary)
TotalFatalitySummary
str(StormData)
TotalInjurySummary <- ddply(StormData, .(EVTYPE), summarize, total = sum(INJURIES))
TotalInjurySummary
MergedData <- merge(TotalInjurySummary, TotalFatalitySummary, by = EVTYPE)
MergedData <- merge(TotalInjurySummary, TotalFatalitySummary, by = "EVTYPE")
MergedData
sum(MergedData$total.x, MergedData$total.y)
rowsum(MergedData$total.x, MergedData$total.y)
head(rowsum(MergedData$total.x, MergedData$total.y))
head(MergedData)
temp <- ddply(StormData, .(EVTYPE), summarize, total = sum(INJURIES, FATALITIES))
temp
head(temp)
tail(temp)
tail(TotalFatalitySummary)
tail(TotalInjurySummary)
PublicHealthSummary <- ddply(StormData, .(EVTYPE), summarize, total = sum(FATALITIES, INJURIES))
PublicHealthSummary <- PublicHealthSummary[order(PublicHealthSummary$total),]
PublicHealthSummary
PublicHealthSummary <- PublicHealthSummary[order(-PublicHealthSummary$total),]
PublicHealthSummary <- PublicHealthSummary[order(-PublicHealthSummary$total),]
PublicHealthSummary
head(PublicHealthSummary)
str(StormData)
head(StormData)
str(PublicHealthSummary)
PubHealthSum20 <- PublicHealthSummary[1:20,]
PubHealthSum20
P
TotEconConseqSum <- EconConseqSummary[1:20,]
EconConseqSummary <- ddply(StormData, .(EVTYPE), summarize, total = sum(PROPDMG, CROPDMG))
library(R.utils)
library(plyr)
PublicHealthSummary <- ddply(StormData, .(EVTYPE), summarize, total = sum(FATALITIES, INJURIES))
PublicHealthSummary <- PublicHealthSummary[order(-PublicHealthSummary$total),]
TotPubHealthSum <- PublicHealthSummary[1:20,]
EconConseqSummary <- ddply(StormData, .(EVTYPE), summarize, total = sum(PROPDMG, CROPDMG))
EconConseqSummary <- EconConseqSummary[order(-EconConseqSummary$total),]
TotEconConseqSum <- EconConseqSummary[1:20,]
View(PubHealthSum20)
rm(PubHealthSum20)
rm(temp)
barplot(TotPubHealthSum$total,names.arg = TotPubHealthSum$EVTYPE)
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE)
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 1)
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 0)
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3)
par(mar = c(6, 2, 2, 2))
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event", ylab = "Total Injuries and Fatalities")
par(mar = c(6, 2, 2, 4))
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event", ylab = "Total Injuries and Fatalities")
par(mar = c(6, 6, 2, 4))
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event", ylab = "Total Injuries and Fatalities")
par(mar = c(7, 4, 2, 2))
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, srt = 60,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event", ylab = "Total Injuries and Fatalities")
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, srt = 60,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event", ylab = "Total Injuries and Fatalities", xpd = TRUE)
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event", ylab = "Total Injuries and Fatalities", xpd = TRUE)
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event", ylab = "Total Injuries and Fatalities", xpd = TRUE, cex = .65)
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event", ylab = "Total Injuries and Fatalities")
par(mar = c(7, 4, 2, 2))
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3,
main = "Weather Events that Affect Public Health Most",
xlab = "", ylab = "Total Injuries and Fatalities")
par(mar = c(7, 4, 2, 2) + 0.2)
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3,
main = "Weather Events that Affect Public Health Most",
xlab = "", ylab = "Total Injuries and Fatalities")
par(mar = c(7, 4, 2, 2) + 0.5)
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3,
main = "Weather Events that Affect Public Health Most",
xlab = "", ylab = "Total Injuries and Fatalities")
par(mar = c(7, 4, 2, 2) + 0.5)
barplot(TotPubHealthSum$total, names.arg = TotPubHealthSum$EVTYPE, las = 3,
main = "Weather Events that Affect Public Health Most",
xlab = "", ylab = "Total Injuries and Fatalities")
library(ggplot2)
qplot(total, data = TotPubHealthSum, geom = "bar")
qplot(EVTYPE, data = TotPubHealthSum, geom = "bar")
qplot(EVTYPE, data = TotPubHealthSum, geom = "bar", weight = total)
q <- qplot(EVTYPE, data = TotPubHealthSum, geom = "bar", weight = total)
q + opts(axis.text.x = theme_text(angle = 90))
q + opts(axis.text.x = theme(angle = 90))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
q <- qplot(EVTYPE, data = TotPubHealthSum, geom = "bar", weight = total)
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
q + ylab("Total Injuries and Fatalities")
q + xlab("Weather Event Type")
q + title("Weather Events that Affect Public Health Most")
print(q)
q <- qplot(EVTYPE, data = TotPubHealthSum, geom = "bar", weight = total)
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
q <- qplot(EVTYPE, data = TotPubHealthSum, geom = "bar", weight = total,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event Type",
ylab = "Total Injuries and Fatalities")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
TotPubHealthSum <- PublicHealthSummary[1:10,]
q <- qplot(EVTYPE, data = TotPubHealthSum, geom = "bar", weight = total,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event Type",
ylab = "Total Injuries and Fatalities")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
q <- qplot(EVTYPE, data = TotEconConseqSum, geom = "bar", weight = total,
main = "Weather Events which Have the Greatest Economic Consequence",
xlab = "Weather Event Type",
ylab = "Total Cost of Property and Crop Damage")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
TotEconConseqSum <- EconConseqSummary[1:10,]
q <- qplot(EVTYPE, data = TotEconConseqSum, geom = "bar", weight = total,
main = "Weather Events which Have the Greatest Economic Consequence",
xlab = "Weather Event Type",
ylab = "Total Cost of Property and Crop Damage")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
View(StormData)
View(StormData)
StormData$PROPDMGAct <- with(StormData, if(PROPDMGEXP == "K") {
PROPDMG * 1000
else {
if (PROPDMGEXP == "M") {
PROPDMG * 1000000
else {
if (PROPDMGEXP == "B") {
PROPDMG * 1000000000
else 0}
}
}
}
})
StormData$PROPDMGAct <- with(StormData,
if(PROPDMGEXP == "K") { PROPDMG * 1000 }
else {
if (PROPDMGEXP == "M") {PROPDMG * 1000000}
else {
if (PROPDMGEXP == "B") {PROPDMG * 1000000000}
else 0}
}
)
StormData$PROPDMGAct <- lapply(with(StormData,
if(PROPDMGEXP == "K") { PROPDMG * 1000 }
else {
if (PROPDMGEXP == "M") {PROPDMG * 1000000}
else {
if (PROPDMGEXP == "B") {PROPDMG * 1000000000}
else 0}
}
))
StormData$PROPDMGAct <- lapply(StormData,
if(PROPDMGEXP == "K") { PROPDMG * 1000 }
else {
if (PROPDMGEXP == "M") {PROPDMG * 1000000}
else {
if (PROPDMGEXP == "B") {PROPDMG * 1000000000}
else 0}
}
)
StormData$PROPDMGAct <- with(Stormdata, lapply(StormData,
if(PROPDMGEXP == "K") { PROPDMG * 1000 }
else {
if (PROPDMGEXP == "M") {PROPDMG * 1000000}
else {
if (PROPDMGEXP == "B") {PROPDMG * 1000000000}
else 0}
}
) )
StormData$PROPDMGMult <- with(StormData, ifelse(PROPDMGEXP=="K", 1000,
ifelse(PROPDMGEXP=="M", 1000000,
ifelse(PROPDMGEXP=="B"), 1000000000,0)))
StormData$PROPDMGMult <- with(StormData,
ifelse(PROPDMGEXP=="K", 1000,
ifelse(PROPDMGEXP=="M", 1e+06,
ifelse(PROPDMGEXP=="B", 1e+09,0))))
View(StormData)
StormData$PROPDMGAct <- with(StormData,
ifelse(PROPDMGEXP=="K", 1000*PROPDMG,
ifelse(PROPDMGEXP=="M", 1e+06*PROPDMG,
ifelse(PROPDMGEXP=="B", 1e+09*PROPDMG,
0*PROPDMG))))
View(StormData)
View(StormData)
View(StormData)
StormData$PROPDMGAct <- with(StormData, if(PROPDMGEXP == "K") {})
library(R.utils)
library(plyr)
# Unzip and read in the raw data archive
bunzip2("repdata-data-StormData.csv.bz2", "repdata-data-StormData.csv",
overwrite = TRUE, remove = FALSE)
StormData <- read.csv("repdata-data-StormData.csv")
PublicHealthSummary <- ddply(StormData, .(EVTYPE), summarize, total = sum(FATALITIES, INJURIES))
# Order in descending order
PublicHealthSummary <- PublicHealthSummary[order(-PublicHealthSummary$total),]
# Take the top 10
TotPubHealthSum <- PublicHealthSummary[1:10,]
StormData$PROPDMGAct <- with(StormData,
ifelse(PROPDMGEXP=="K", PROPDMG,
ifelse(PROPDMGEXP=="M", 1e+03*PROPDMG,
ifelse(PROPDMGEXP=="B", 1e+06*PROPDMG,
0*PROPDMG))))
StormData$CROPDMGAct <- with(StormData,
ifelse(CROPDMGEXP=="K", CROPDMG,
ifelse(CROPDMGEXP=="M", 1e+03*CROPDMG,
ifelse(CROPDMGEXP=="B", 1e+06*CROPDMG,
0*CROPDMG))))
EconConseqSummary <- ddply(StormData, .(EVTYPE), summarize, total = sum(PROPDMGAct, CROPDMGAct))
# Order in descending order
EconConseqSummary <- EconConseqSummary[order(-EconConseqSummary$total),]
# Take the top 10
TotEconConseqSum <- EconConseqSummary[1:10,]
library(ggplot2)
q <- qplot(EVTYPE, data = TotPubHealthSum, geom = "bar", weight = total,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event Type",
ylab = "Total Injuries and Fatalities")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
q <- qplot(EVTYPE, data = TotEconConseqSum, geom = "bar", weight = total,
main = "Weather Events which Have the Greatest Economic Consequence",
xlab = "Weather Event Type",
ylab = "Total Cost of Property and Crop Damage (in $1K)")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
View(StormData)
q <- qplot(EVTYPE, data = TotPubHealthSum, geom = "bar", weight = total,
main = "Weather Events that Affect Public Health Most",
xlab = "Weather Event Type",
ylab = "Total Injuries and Fatalities")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
q <- qplot(EVTYPE, data = TotEconConseqSum, geom = "bar", weight = total,
main = "Weather Events which Have the Greatest Economic Consequence",
xlab = "Weather Event Type",
ylab = "Total Cost of Property and Crop Damage (in $1K)")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
TotEconConseqSum
TotPubHealthSum
install.packages(c("BH", "formatR", "gsubfn", "hexbin", "markdown", "mosaic", "R.utils", "swirl", "XBRL", "XLConnect", "xlsxjars"))
install.packages("swirl")
library(swirl)
install_from_swirl("Regression Models")
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
install.packages("BH")
install.packages("BH")
